{
  "hash": "676cb379efb39a6defdea169978b2133",
  "result": {
    "engine": "julia",
    "markdown": "---\ntitle: Helper functions\nformat:\n  html:\n    toc: true\n    number-sections: true\nengine: julia\nexecute:\n  freeze: auto\n  cache: true\n---\n\n\n\n\n`UFF.jl` provides several helper functions to facilitate interaction with UFF datasets. At the moment, the following helper functions are available:\n\n- `connectivity_matrix`: Returns the connectivity matrix extracted from `Dataset2412`.\n- `dataset_types`: Returns the list of all dataset types extracted from an UFF file.\n- `supported_datasets`: Lists all dataset types that are currently supported for reading.\n\n## API\n\n::: {.api}\n\n::: {#4 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div class=\"markdown\"><pre><code class=\"language-julia\">connectivity_matrix&#40;dataset::Dataset2412&#41; -&gt; Matrix&#123;Int&#125;</code></pre>\n<p>Returns the connectivity matrix for a Dataset2412 object, where each row corresponds to an element and each column corresponds to a node. Missing values are filled with <code>-1</code>.</p>\n<p><strong>Input</strong></p>\n<ul>\n<li><p><code>dataset::Dataset2412</code>: The Dataset2412 object to extract connectivity from.</p>\n</li>\n</ul>\n<p><strong>Output</strong></p>\n<ul>\n<li><p><code>Matrix&#123;Int&#125;</code>: A matrix representing the connectivity of elements to nodes.</p>\n</li>\n</ul>\n\n\n</div>\n```\n:::\n:::\n\n\n:::\n\n::: {.api}\n\n::: {#6 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div class=\"markdown\"><pre><code class=\"language-julia\">dataset_types&#40;data::UFFDataset&#41; -&gt; Symbol</code></pre>\n<p>Returns the dataset type presents in a UFFDataset object.</p>\n<p><strong>Input</strong></p>\n<ul>\n<li><p><code>data::UFFDataset</code>: The UFFDataset object to extract types from.</p>\n</li>\n</ul>\n<p><strong>Output</strong></p>\n<ul>\n<li><p><code>Symbol</code>: A vector containing the dataset types.</p>\n</li>\n</ul>\n\n\n</div>\n```\n:::\n:::\n\n\n:::\n\n::: {.api}\n\n::: {#8 .cell execution_count=1}\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<div class=\"markdown\"><pre><code class=\"language-julia\">supported_datasets&#40;&#41; -&gt; Vector&#123;Int&#125;</code></pre>\n<p>Returns a vector of supported UFF dataset types.</p>\n\n\n</div>\n```\n:::\n:::\n\n\n:::\n\n## Example usage\n\n### Connectivity Matrix\n```julia\nusing UFF\n\n# readuff returns a vector of datasets\ndata2412 = readuff(\"path/to/your/file2412.uff\")[1]\nconnectivity = connectivity_matrix(data2412)\n```\n\n### Dataset Types\n```julia\nusing UFF\n\n# Only one dataset is read\ndata = readuff(\"path/to/your/file.uff\")[1]\ndtype = dataset_types(data)\n\n# Several datasets are read\ndata_all = readuff(\"path/to/your/file.uff\")\ndtypes = dataset_types.(data_all)\n```\n\n### Supported Datasets\n```julia\nusing UFF\n\nvalid_datasets = supported_datasets()\n```\n\n",
    "supporting": [
      "helper_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}