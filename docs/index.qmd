---
title: UFF.jl
format:
  html:
    toc: true
    number-sections: false
---

<center>
    ![](./assets/logo/doclogo.svg){width=35%}
</center>

<br/>

[![Generic badge](https://img.shields.io/badge/Version-0.1.0-cornflowerblue.svg)]()
[![MIT License](https://img.shields.io/badge/License-MIT-forestgreen)](https://github.com/maucejo/elsearticle/blob/main/LICENSE)
[![Aqua QA](https://raw.githubusercontent.com/JuliaTesting/Aqua.jl/master/badge.svg)](https://github.com/JuliaTesting/Aqua.jl)
[![DispatchDoctor](https://img.shields.io/badge/%F0%9F%A9%BA_tested_with-DispatchDoctor.jl-blue?labelColor=white)](https://github.com/MilesCranmer/DispatchDoctor.jl)

`UFF.jl` is a Julia package for reading (and writing in the future) Universal File Format (UFF) files, commonly used in engineering applications.

::: {.callout-warning}
The package is under active development and is developed as part of my research activities.
:::

## Supported formats
Currently, `UFF.jl` supports reading UFF files with the following blocks:

* Dataset 15
* Dataset 18
* Dataset 55
* Dataset 58
* Dataset 82
* Dataset 151
* Dataset 164
* Dataset 2411
* Dataset 2412
* Dataset 2414

## Contributing

Contributions are welcome! If you encounter any issues or have suggestions for improvements, please open an issue or submit a pull request on the [GitHub repository](https://github.com/maucejo/UFF.jl).

To make contributions easier, please provide `*.unv` or `*.uff` files that can be used as test cases for the new features or bug fixes.

## Acknowledgements

The creation of `UFF.jl` was driven by the need to handle UFF files in Julia for processing the experimental data that I collect during my research activities.
This package take some inspiration from two wonderful packages : [pyuff](https://github.com/pyNastran/puyff) written in Python and [uff](https://github.com/murmlgrmpf/uff) written in Matlab. However, UFF.jl is a completely new development, with its own design choices, which leverages of Julia's strengths and provides a native solution for handling UFF files in the Julia ecosystem.

For testing and validate the package, I used several UFF files that are publicly available online, including some provided by [pyuff](https://github.com/pyNastran/puyff) and some coming from my own experimental campaigns. For this reason, I would like to thank all the people who made these files available. This also explains why bugs may still be present in the package, as I do not have access to all possible UFF file variations.

## Reproducibility

::: {.callout-note collapse=true appearance="simple" icon=false}

# Project direct dependencies

`UFF.jl` has no direct dependencies.
:::

::: {.callout-note collapse=true appearance="simple" icon=false}

# Julia version and machine information

```julia
Julia Version 1.12.1
Commit ba1e628ee49 (2025-10-17 13:02 UTC)
Build Info:
  Official https://julialang.org release
Platform Info:
  OS: macOS (arm64-apple-darwin24.0.0)
  CPU: 16 Ã— Apple M4 Max
  WORD_SIZE: 64
  LLVM: libLLVM-18.1.7 (ORCJIT, apple-m4)
  GC: Built with stock GC
Threads: 1 default, 1 interactive, 1 GC (on 12 virtual cores)
Environment:
  JULIA_EDITOR = code
  JULIA_VSCODE_REPL = 1
  JULIA_PKG_SERVER = https://juliahub.com
```
:::

## License

This package is under [MIT License](https://opensource.org/license/mit).